{"ast":null,"code":"import _objectSpread from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maximilian/privat/React-frontend/src/GlobalState.js\";\nimport React, { useReducer } from 'react';\nexport const UserContext = React.createContext();\nexport const LOGIN = 'login';\nexport const LOGOUT = 'logout';\nexport const USERINPUT = 'userinput';\n\nconst GlobalState = props => {\n  const _useReducer = useReducer(loginReducer, {\n    login: false,\n    token: localStorage.token,\n    falseregister: false,\n    username: '',\n    password: '',\n    passwordrepeat: ''\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        userState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  function loginReducer(state, action) {\n    switch (action.type) {\n      case LOGIN:\n        return updateUserStatus(state, action);\n\n      case LOGOUT:\n        return updateUserStatus(state, action);\n\n      case USERINPUT:\n        return updateUserStatus(state, action);\n\n      default:\n        return state;\n    }\n  }\n\n  function updateUserStatus(state, action) {\n    if (action.type === LOGIN) {\n      return _objectSpread({}, state, {\n        login: true,\n        token: action.token,\n        username: action.username\n      });\n    } else if (action.type === LOGOUT) {\n      return _objectSpread({}, state, {\n        login: false,\n        token: ''\n      });\n    } else if (action.type === USERINPUT) {\n      if (typeof action.username !== 'undefined') {\n        return _objectSpread({}, state, {\n          username: action.username\n        });\n      }\n    }\n  }\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      userState,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["/Users/maximilian/privat/React-frontend/src/GlobalState.js"],"names":["React","useReducer","UserContext","createContext","LOGIN","LOGOUT","USERINPUT","GlobalState","props","loginReducer","login","token","localStorage","falseregister","username","password","passwordrepeat","userState","dispatch","state","action","type","updateUserStatus","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;AAEP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;;AAEP,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,sBACKP,UAAU,CAACQ,YAAD,EAAe;AAACC,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAEC,YAAY,CAACD,KAAnC;AAA0CE,IAAAA,aAAa,EAAE,KAAzD;AAAgEC,IAAAA,QAAQ,EAAE,EAA1E;AAA8EC,IAAAA,QAAQ,EAAE,EAAxF;AAA4FC,IAAAA,cAAc,EAAE;AAA5G,GAAf,CADf;AAAA;AAAA,QAClBC,SADkB;AAAA,QACPC,QADO;;AAGzB,WAAST,YAAT,CAAsBU,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKjB,KAAL;AACE,eAAOkB,gBAAgB,CAACH,KAAD,EAAQC,MAAR,CAAvB;;AACF,WAAKf,MAAL;AACE,eAAOiB,gBAAgB,CAACH,KAAD,EAAQC,MAAR,CAAvB;;AACF,WAAKd,SAAL;AACE,eAAOgB,gBAAgB,CAACH,KAAD,EAAQC,MAAR,CAAvB;;AACF;AACE,eAAOD,KAAP;AARJ;AAUD;;AAED,WAASG,gBAAT,CAA0BH,KAA1B,EAAiCC,MAAjC,EAAyC;AACvC,QAAIA,MAAM,CAACC,IAAP,KAAgBjB,KAApB,EAA2B;AACzB,+BAAYe,KAAZ;AAAmBT,QAAAA,KAAK,EAAE,IAA1B;AAAgCC,QAAAA,KAAK,EAAES,MAAM,CAACT,KAA9C;AAAqDG,QAAAA,QAAQ,EAAEM,MAAM,CAACN;AAAtE;AACD,KAFD,MAEO,IAAIM,MAAM,CAACC,IAAP,KAAgBhB,MAApB,EAA4B;AACjC,+BAAYc,KAAZ;AAAmBT,QAAAA,KAAK,EAAE,KAA1B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC;AACD,KAFM,MAEC,IAAIS,MAAM,CAACC,IAAP,KAAgBf,SAApB,EAA+B;AACrC,UAAI,OAAOc,MAAM,CAACN,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,iCAAYK,KAAZ;AAAmBL,UAAAA,QAAQ,EAAEM,MAAM,CAACN;AAApC;AACD;AACF;AACF;;AAED,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACe,QADT,CADJ;AAKH,CAjCD;;AAmCA,eAAehB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const UserContext = React.createContext();\n\nexport const LOGIN = 'login';\nexport const LOGOUT = 'logout';\nexport const USERINPUT = 'userinput'\n\nconst GlobalState = props => {\n    const [userState, dispatch] = useReducer(loginReducer, {login: false, token: localStorage.token, falseregister: false, username: '', password: '', passwordrepeat: ''});\n\n    function loginReducer(state, action) {\n      switch (action.type) {\n        case LOGIN:\n          return updateUserStatus(state, action);\n        case LOGOUT:\n          return updateUserStatus(state, action);\n        case USERINPUT:\n          return updateUserStatus(state, action);\n        default:\n          return state;\n      }\n    }\n\n    function updateUserStatus(state, action) {\n      if (action.type === LOGIN) {\n        return { ...state, login: true, token: action.token, username: action.username } \n      } else if (action.type === LOGOUT) {\n        return { ...state, login: false, token: '' } \n      } else  if (action.type === USERINPUT) {\n        if (typeof action.username !== 'undefined') {\n          return { ...state, username: action.username }\n        }\n      }\n    }\n\n    return (\n        <UserContext.Provider value={{userState, dispatch}}>\n          {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default GlobalState"]},"metadata":{},"sourceType":"module"}