{"ast":null,"code":"import _objectSpread from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maximilian/privat/React-frontend/src/components/ChangeUserdata.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from '../GlobalState';\nimport { IonButton, IonPage, IonText, IonList, IonContent } from '@ionic/react';\nimport Input from './Input';\nimport { getFieldErrors } from '../functions/fieldvalidation';\n\nconst ChangeUserdata = props => {\n  const userContext = useContext(UserContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        changeDataError = _useState2[0],\n        setchangeDataError = _useState2[1];\n\n  const _useState3 = useState({\n    email: {\n      fieldValue: '',\n      pattern: {\n        value: '^[^s@]+@[^s@]+.[^s@]+$',\n        message: 'Gültige Email sieht aber anders aus.'\n      }\n    },\n    password: {\n      fieldValue: '',\n      minLength: {\n        value: 2,\n        message: 'Zu kurz, mindestens 2. '\n      }\n    },\n    passwordrepeat: {\n      fieldValue: '',\n      type: 'password'\n    }\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formFields = _useState4[0],\n        setformFields = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fieldToChange = _useState6[0],\n        setFieldToChange = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        passwordError = _useState8[0],\n        setPasswordError = _useState8[1];\n\n  const changeUserdata = fieldName => {\n    const errorsExist = hasFormErrors(fieldName);\n    let invalidPassword;\n\n    if (formFields.password.fieldValue !== formFields.passwordrepeat.fieldValue) {\n      invalidPassword = true;\n      setPasswordError('Passwörter müssen übereinstimmen.');\n    } else {\n      invalidPassword = false;\n      setPasswordError('');\n    }\n\n    if (errorsExist || invalidPassword) {\n      setchangeDataError(React.createElement(IonText, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Es sind noch Fehler vorhanden. Bitte korrigieren und nochmal klicken.\")));\n      return;\n    } else {\n      setchangeDataError('');\n    }\n\n    const token = localStorage.token;\n    let body = {};\n    body[fieldName] = formFields[fieldName].fieldValue;\n    body = JSON.stringify(body);\n    const url = 'http://3.123.35.137/user';\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'bearer ' + token\n      },\n      body: body,\n      method: 'PATCH'\n    }).then(response => {\n      return response.json();\n    }).then(backendAnswer => {\n      if (backendAnswer.success === true) {\n        setchangeDataError(React.createElement(IonText, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Daten\\xE4nderung erfolgreich.\")));\n      } else {\n        setchangeDataError(React.createElement(IonText, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Daten\\xE4nderung nicht m\\xF6glich.\")));\n      }\n    }).catch(error => {\n      console.log(error);\n      setchangeDataError(React.createElement(IonText, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Daten\\xE4nderung nicht m\\xF6glich.\")));\n    });\n  };\n\n  const hasFormErrors = fieldName => {\n    let errorsExist = false;\n    const updatedFormFields = {};\n\n    for (let _ref of Object.entries(formFields)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let key = _ref2[0];\n      let fieldObject = _ref2[1];\n\n      if (fieldName === key) {\n        const fieldErrors = getFieldErrors(fieldObject);\n        updatedFormFields[key] = _objectSpread({}, fieldObject, {}, {\n          fieldErrors\n        });\n\n        for (let _ref3 of Object.entries(fieldErrors)) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n\n          let key = _ref4[0];\n          let errorMessage = _ref4[1];\n\n          if (errorMessage.length > 0) {\n            errorsExist = true;\n          }\n        }\n      }\n    }\n\n    setformFields(_objectSpread({}, formFields, {}, updatedFormFields));\n    return errorsExist;\n  };\n\n  const navigateBack = () => {\n    setFieldToChange('');\n    setchangeDataError('');\n    setPasswordError('');\n  };\n\n  useEffect(() => {\n    setchangeDataError('');\n    setPasswordError('');\n  }, [props.tabChanged]);\n\n  if (userContext.userState && userContext.userState.login && !fieldToChange) {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ion-text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Was m\\xF6chten Sie \\xE4ndern?\"), React.createElement(IonButton, {\n      onClick: () => setFieldToChange('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Email\"), React.createElement(IonButton, {\n      onClick: () => setFieldToChange('password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Passwort\")));\n  } else if (userContext.userState && userContext.userState.login && fieldToChange === 'email') {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fieldName: \"email\",\n      type: \"text\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(IonButton, {\n      onClick: () => navigateBack(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Zur\\xFCck\"), React.createElement(IonButton, {\n      onClick: () => changeUserdata('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Abschicken\"), changeDataError));\n  } else if (userContext.userState && userContext.userState.login && fieldToChange === 'password') {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fieldName: \"password\",\n      type: \"password\",\n      clearOnEdit: \"false\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Input, {\n      fieldName: \"passwordrepeat\",\n      type: \"password\",\n      clearOnEdit: \"false\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(IonButton, {\n      onClick: () => navigateBack(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Zur\\xFCck\"), React.createElement(IonButton, {\n      onClick: () => changeUserdata('password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Abschicken\"), React.createElement(IonText, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, passwordError)), changeDataError));\n  } else {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ion-text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Bitte einloggen.\")));\n  }\n};\n\nexport default ChangeUserdata;","map":{"version":3,"sources":["/Users/maximilian/privat/React-frontend/src/components/ChangeUserdata.js"],"names":["React","useState","useContext","useEffect","UserContext","IonButton","IonPage","IonText","IonList","IonContent","Input","getFieldErrors","ChangeUserdata","props","userContext","changeDataError","setchangeDataError","email","fieldValue","pattern","value","message","password","minLength","passwordrepeat","type","formFields","setformFields","fieldToChange","setFieldToChange","passwordError","setPasswordError","changeUserdata","fieldName","errorsExist","hasFormErrors","invalidPassword","token","localStorage","body","JSON","stringify","url","fetch","headers","Authorization","method","then","response","json","backendAnswer","success","catch","error","console","log","updatedFormFields","Object","entries","key","fieldObject","fieldErrors","errorMessage","length","navigateBack","tabChanged","userState","login"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from '../GlobalState';\nimport { IonButton, IonPage, IonText, IonList, IonContent } from '@ionic/react';\nimport Input from './Input';\nimport { getFieldErrors } from '../functions/fieldvalidation';\n\nconst ChangeUserdata = props => {\n  const userContext = useContext(UserContext);\n  const [changeDataError, setchangeDataError] = useState('');\n  const [formFields, setformFields] = useState({\n    email: {fieldValue: '', pattern: {value: '^[^s@]+@[^s@]+.[^s@]+$', message: 'Gültige Email sieht aber anders aus.'}},\n    password: {fieldValue: '', minLength: {value: 2, message: 'Zu kurz, mindestens 2. '}},\n    passwordrepeat: {fieldValue: '', type: 'password'}\n  });\n  const [fieldToChange, setFieldToChange] = useState();\n  const [passwordError, setPasswordError] = useState('');\n\n  const changeUserdata = (fieldName) => {\n    const errorsExist = hasFormErrors(fieldName)\n    let invalidPassword;\n\n    if (formFields.password.fieldValue !== formFields.passwordrepeat.fieldValue) {\n      invalidPassword = true;\n      setPasswordError('Passwörter müssen übereinstimmen.')\n    } else {\n      invalidPassword = false;\n      setPasswordError('')\n    }\n\n    if (errorsExist || invalidPassword) {\n      setchangeDataError(<IonText color=\"danger\"><p>Es sind noch Fehler vorhanden. Bitte korrigieren und nochmal klicken.</p></IonText>)\n      return\n    } else {\n      setchangeDataError('')\n    }\n\n    const token = localStorage.token\n    let body = {};\n    body[fieldName] = formFields[fieldName].fieldValue;\n\n    body = JSON.stringify(body);\n    const url = 'http://3.123.35.137/user';\n    fetch(url, {\n      headers: {'Content-Type': 'application/json',\n      Authorization: 'bearer ' + token},\n      body: body,\n      method: 'PATCH'\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(backendAnswer => {\n      if (backendAnswer.success === true) {\n        setchangeDataError(<IonText color=\"success\"><p>Datenänderung erfolgreich.</p></IonText>)\n       } else {\n        setchangeDataError(<IonText color=\"danger\"><p>Datenänderung nicht möglich.</p></IonText>)\n      }\n    })\n    .catch(error => {\n      console.log(error)\n      setchangeDataError(<IonText color=\"danger\"><p>Datenänderung nicht möglich.</p></IonText>)\n    })\n  }\n\n  const hasFormErrors = (fieldName) => {\n    let errorsExist = false;\n    const updatedFormFields = {}\n    for (let [key, fieldObject] of Object.entries(formFields)) {\n      if (fieldName === key) {\n        const fieldErrors = getFieldErrors(fieldObject)\n        updatedFormFields[key] = {...fieldObject, ...{fieldErrors}}\n        for (let [key, errorMessage] of Object.entries(fieldErrors)) {\n          if (errorMessage.length > 0) {\n            errorsExist = true;\n          }\n        }\n      }\n    }\n\n    setformFields({...formFields, ...updatedFormFields})\n    return errorsExist;\n  }\n\n  const navigateBack = () => {\n    setFieldToChange('')\n    setchangeDataError('')\n    setPasswordError('')\n  }\n\n  useEffect(() => {\n    setchangeDataError('')\n    setPasswordError('')\n  }, \n  [props.tabChanged])\n\n    if (userContext.userState && userContext.userState.login && !fieldToChange) {\n        return (\n          <IonPage>\n            <IonContent className=\"ion-padding\">\n              <p className=\"ion-text-center\">Was möchten Sie ändern?</p>\n                <IonButton onClick={() => setFieldToChange('email')}>Email</IonButton>\n                <IonButton onClick={() => setFieldToChange('password')}>Passwort</IonButton>\n            </IonContent>\n          </IonPage>\n        )\n      } else if (userContext.userState && userContext.userState.login && fieldToChange === 'email') {\n        return (\n          <IonPage>\n            <IonContent className=\"ion-padding\">\n              <IonList>\n                <Input fieldName=\"email\" type=\"text\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n              </IonList>\n              <IonButton onClick={() => navigateBack()}>Zurück</IonButton>\n              <IonButton onClick={() => changeUserdata('email')}>Abschicken</IonButton>\n              {changeDataError}\n            </IonContent>\n          </IonPage>\n        )\n      } else if (userContext.userState && userContext.userState.login && fieldToChange === 'password') {\n        return (\n        <IonPage>\n          <IonContent className=\"ion-padding\">\n            <IonList>\n              <Input fieldName=\"password\" type=\"password\" clearOnEdit=\"false\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n              <Input fieldName=\"passwordrepeat\" type=\"password\" clearOnEdit=\"false\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n            </IonList>\n            <IonButton onClick={() => navigateBack()}>Zurück</IonButton>\n            <IonButton onClick={() => changeUserdata('password')}>Abschicken</IonButton>\n            <IonText color=\"danger\"><p>{passwordError}</p></IonText>\n            {changeDataError}\n          </IonContent>\n        </IonPage>\n        )\n      } else {\n        return (\n          <IonPage>\n            <IonContent className=\"ion-padding\">\n              <p className=\"ion-text-center\">Bitte einloggen.</p >\n            </IonContent>\n          </IonPage>\n        )\n    }\n  }\n\nexport default ChangeUserdata"]},"metadata":{},"sourceType":"module"}