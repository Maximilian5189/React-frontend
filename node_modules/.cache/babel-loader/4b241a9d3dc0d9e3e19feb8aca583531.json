{"ast":null,"code":"import _objectSpread from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maximilian/privat/React-frontend/src/components/Login.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport { UserContext, LOGIN, LOGOUT } from '../GlobalState';\nimport { IonNote, IonButton, IonPage, IonContent, IonList } from '@ionic/react';\nimport Input from './Input';\n\nconst Login = props => {\n  const userContext = useContext(UserContext);\n\n  const _useState = useState({\n    success: '',\n    fail: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginMessage = _useState2[0],\n        setloginMessage = _useState2[1];\n\n  const _useState3 = useState({\n    username: {\n      fieldValue: ''\n    },\n    password: {\n      fieldValue: ''\n    }\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formFields = _useState4[0],\n        setformFields = _useState4[1];\n\n  function login(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const token = localStorage.token;\n    let body;\n\n    if (formFields.username.fieldValue.length === 0 && formFields.password.fieldValue.length === 0 && !e) {\n      body = JSON.stringify({\n        token\n      });\n    } else if (formFields.username.fieldValue.length === 0 || formFields.password.fieldValue.length === 0) {\n      setloginMessage(_objectSpread({}, loginMessage, {\n        fail: 'Falscher Login!'\n      }));\n      return;\n    } else {\n      body = JSON.stringify({\n        username: formFields.username.fieldValue,\n        password: formFields.password.fieldValue\n      });\n    }\n\n    fetch('http://18.156.176.105/user/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: body,\n      method: 'POST'\n    }).then(response => {\n      return response.json();\n    }).then(parsedAnswer => {\n      if (parsedAnswer.success === true) {\n        let username;\n\n        if (parsedAnswer.result && parsedAnswer.result.user) {\n          username = parsedAnswer.result.user;\n        } else {\n          username = formFields.username.fieldValue;\n        }\n\n        const dispatchData = {\n          type: LOGIN,\n          username\n        };\n\n        if (parsedAnswer.token) {\n          dispatchData.token = parsedAnswer.token;\n          localStorage.token = parsedAnswer.token;\n        }\n\n        userContext.dispatch(dispatchData);\n        setloginMessage(_objectSpread({}, loginMessage, {\n          success: 'Login erfolgreich!'\n        }));\n      } else if (formFields.username.fieldValue || formFields.password.fieldValue) {\n        setloginMessage(_objectSpread({}, loginMessage, {\n          fail: 'Falscher Login!'\n        }));\n      }\n    }).catch(error => {\n      console.log(error);\n\n      if (e) {\n        setloginMessage(_objectSpread({}, loginMessage, {\n          fail: 'Login nicht mÃ¶glich.'\n        }));\n      }\n    });\n  }\n\n  function logout() {\n    userContext.dispatch({\n      type: LOGOUT\n    });\n    setloginMessage('');\n    localStorage.token = '';\n  }\n\n  useEffect(() => {\n    login(null);\n  }, []);\n\n  if (userContext.userState.login === true) {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, loginMessage.success), React.createElement(IonButton, {\n      onClick: () => logout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Ausloggen\")));\n  } else {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fieldName: \"username\",\n      type: \"text\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Input, {\n      fieldName: \"password\",\n      type: \"password\",\n      clearOnEdit: \"false\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(IonButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Einloggen\"), React.createElement(IonNote, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, loginMessage.fail)))));\n  }\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/maximilian/privat/React-frontend/src/components/Login.js"],"names":["React","useEffect","useContext","useState","UserContext","LOGIN","LOGOUT","IonNote","IonButton","IonPage","IonContent","IonList","Input","Login","props","userContext","success","fail","loginMessage","setloginMessage","username","fieldValue","password","formFields","setformFields","login","e","preventDefault","token","localStorage","body","length","JSON","stringify","fetch","headers","method","then","response","json","parsedAnswer","result","user","dispatchData","type","dispatch","catch","error","console","log","logout","userState","tabChanged"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { UserContext, LOGIN, LOGOUT } from '../GlobalState';\nimport { IonNote, IonButton, IonPage, IonContent, IonList } from '@ionic/react';\nimport Input from './Input';\n\nconst Login = props => {\n  const userContext = useContext(UserContext);\n  const [loginMessage, setloginMessage] = useState({success: '', fail: ''});\n  const [formFields, setformFields] = useState({\n    username: {fieldValue: ''},\n    password: {fieldValue: ''}\n  });\n\n  function login(e) {\n    if (e) {\n      e.preventDefault();\n    }\n \n    const token = localStorage.token\n    let body;\n    if (formFields.username.fieldValue.length === 0 && formFields.password.fieldValue.length === 0 && !e) {\n      body = JSON.stringify({token})\n    } else if (formFields.username.fieldValue.length === 0 || formFields.password.fieldValue.length === 0) {\n      setloginMessage({...loginMessage, fail: 'Falscher Login!'})\n      return\n    } else {\n      body = JSON.stringify({username: formFields.username.fieldValue, password: formFields.password.fieldValue});\n    }\n\n    fetch('http://18.156.176.105/user/login', \n    {\n      headers: {'Content-Type': 'application/json'},\n      body: body,\n      method: 'POST'\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(parsedAnswer => {\n        if (parsedAnswer.success === true) {\n          let username;\n          if (parsedAnswer.result && parsedAnswer.result.user) {\n            username = parsedAnswer.result.user;\n          } else {\n            username = formFields.username.fieldValue;\n          }\n          const dispatchData = {type: LOGIN, username}\n          if (parsedAnswer.token) {\n            dispatchData.token = parsedAnswer.token;\n            localStorage.token = parsedAnswer.token;\n          }\n          userContext.dispatch(dispatchData);\n          setloginMessage({...loginMessage, success: 'Login erfolgreich!'})\n        } else if (formFields.username.fieldValue || formFields.password.fieldValue) {\n          setloginMessage({...loginMessage, fail: 'Falscher Login!'})\n        }\n      })\n      .catch(error => {\n        console.log(error)\n        if (e) {\n          setloginMessage({...loginMessage, fail: 'Login nicht mÃ¶glich.'})\n        }\n      })\n  }\n\n  function logout() {\n    userContext.dispatch({type: LOGOUT})\n    setloginMessage('')\n    localStorage.token = '';\n  }\n\n  useEffect(() => {\n    login(null);\n  }, []);\n\n  if (userContext.userState.login === true) {\n    return (\n      <IonPage>\n        <IonContent className=\"ion-padding\">\n          <p color=\"success\">{loginMessage.success}</p>\n          <IonButton onClick={() => logout()}>Ausloggen</IonButton>\n        </IonContent>\n      </IonPage>\n    )\n  } else {\n    return (\n      <IonPage>\n        <IonContent className=\"ion-padding\">\n          <form noValidate autoComplete=\"off\" onSubmit={login}>\n            <IonList>\n              <Input fieldName=\"username\" type=\"text\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n              <Input fieldName=\"password\" type=\"password\" clearOnEdit=\"false\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n            </IonList>\n            <IonButton type=\"submit\">Einloggen</IonButton>\n            <IonNote color=\"danger\"><p>{loginMessage.fail}</p></IonNote>\n          </form>\n        </IonContent>\n      </IonPage>\n    )\n  }\n\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}