{"ast":null,"code":"import _objectSpread from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/maximilian/privat/React-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maximilian/privat/React-frontend/src/components/Register.js\";\nimport React, { useState, useContext } from 'react';\nimport { UserContext, LOGOUT, USERINPUT } from '../GlobalState';\nimport { IonButton, IonPage, IonNote, IonList, IonText, IonContent } from '@ionic/react';\nimport Input from './Input';\nimport { getFieldErrors } from '../functions/fieldvalidation';\n\nconst Register = props => {\n  const userContext = useContext(UserContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        registerError = _useState2[0],\n        setRegisterError = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isRegistered = _useState4[0],\n        setIsRegistered = _useState4[1];\n\n  const _useState5 = useState({\n    username: {\n      fieldValue: '',\n      minLength: {\n        value: 2,\n        message: 'Zu kurz, mindestens zwei Buchstaben.'\n      },\n      maxLength: {\n        value: 10,\n        message: 'Zu lang. Maximal 10 Buchstaben.'\n      },\n      pattern: {\n        value: '^[a-zA-Z]+$',\n        message: 'Nur Buchstaben.'\n      }\n    },\n    email: {\n      fieldValue: '',\n      pattern: {\n        value: '^[^s@]+@[^s@]+.[^s@]+$',\n        message: 'Gültige Email sieht aber anders aus.'\n      }\n    },\n    password: {\n      fieldValue: '',\n      minLength: {\n        value: 2,\n        message: 'Zu kurz, mindestens mindestens zwei Ziffern. '\n      }\n    }\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        formFields = _useState6[0],\n        setformFields = _useState6[1];\n\n  const register = () => {\n    const errorsExist = hasFormErrors();\n\n    if (errorsExist) {\n      setRegisterError('Es sind noch Fehler vorhanden. Bitte korrigieren und nochmal klicken.');\n      return;\n    } else {\n      setRegisterError('');\n    }\n\n    const body = JSON.stringify({\n      username: formFields.username.fieldValue,\n      password: formFields.password.fieldValue,\n      email: formFields.email.fieldValue\n    });\n    const url = 'http://3.123.35.137/user/add';\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: body,\n      method: 'POST'\n    }).then(response => {\n      return response.json();\n    }).then(backendAnswer => {\n      if (backendAnswer.success === true) {\n        setIsRegistered(true);\n        setRegisterError('');\n        userContext.dispatch({\n          type: USERINPUT,\n          username: formFields.username.fieldValue\n        });\n      } else if (backendAnswer.error.duplicate === true) {\n        setRegisterError('User oder Email bereits im System vorhanden.');\n      } else {\n        setRegisterError('Registrierung nicht möglich.');\n      }\n    }).catch(error => {\n      setRegisterError('Registrierung nicht möglich.');\n    });\n  };\n\n  const hasFormErrors = () => {\n    let errorsExist = false;\n    const updatedFormFields = {};\n\n    for (let _ref of Object.entries(formFields)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let key = _ref2[0];\n      let fieldObject = _ref2[1];\n      const fieldErrors = getFieldErrors(fieldObject);\n      updatedFormFields[key] = _objectSpread({}, fieldObject, {}, {\n        fieldErrors\n      });\n\n      for (let _ref3 of Object.entries(fieldErrors)) {\n        var _ref4 = _slicedToArray(_ref3, 2);\n\n        let key = _ref4[0];\n        let errorMessage = _ref4[1];\n\n        if (errorMessage.length > 0) {\n          errorsExist = true;\n        }\n      }\n    }\n\n    setformFields(_objectSpread({}, formFields, {}, updatedFormFields));\n    return errorsExist;\n  };\n\n  if (isRegistered) {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ion-text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Erfolgreich registriert!\")));\n  } else if (!userContext.userState || !userContext.userState.login || registerError) {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fieldName: \"username\",\n      type: \"text\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Input, {\n      fieldName: \"email\",\n      type: \"text\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Input, {\n      fieldName: \"password\",\n      type: \"password\",\n      clearOnEdit: \"false\",\n      formFields: formFields,\n      setformFields: setformFields,\n      tabChanged: props.tabChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(IonButton, {\n      className: \"ion-margin-bottom\",\n      onClick: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Register\"), React.createElement(IonNote, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, registerError))));\n  } else {\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"ion-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(IonText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Neu registrieren?\")), React.createElement(IonButton, {\n      onClick: () => userContext.dispatch({\n        type: LOGOUT\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Ausloggen\")));\n  }\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/maximilian/privat/React-frontend/src/components/Register.js"],"names":["React","useState","useContext","UserContext","LOGOUT","USERINPUT","IonButton","IonPage","IonNote","IonList","IonText","IonContent","Input","getFieldErrors","Register","props","userContext","registerError","setRegisterError","isRegistered","setIsRegistered","username","fieldValue","minLength","value","message","maxLength","pattern","email","password","formFields","setformFields","register","errorsExist","hasFormErrors","body","JSON","stringify","url","fetch","headers","method","then","response","json","backendAnswer","success","dispatch","type","error","duplicate","catch","updatedFormFields","Object","entries","key","fieldObject","fieldErrors","errorMessage","length","userState","login","tabChanged"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { UserContext, LOGOUT, USERINPUT } from '../GlobalState';\nimport { IonButton, IonPage, IonNote, IonList, IonText, IonContent } from '@ionic/react';\nimport Input from './Input';\nimport { getFieldErrors } from '../functions/fieldvalidation';\n\nconst Register = props => {\n  const userContext = useContext(UserContext);\n  const [registerError, setRegisterError] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [formFields, setformFields] = useState({\n    username: {fieldValue: '', minLength: {value: 2, message: 'Zu kurz, mindestens zwei Buchstaben.'}, maxLength: {value: 10, message: 'Zu lang. Maximal 10 Buchstaben.'}, pattern: {value: '^[a-zA-Z]+$', message: 'Nur Buchstaben.'}}, \n    email: {fieldValue: '', pattern: {value: '^[^s@]+@[^s@]+.[^s@]+$', message: 'Gültige Email sieht aber anders aus.'}},\n    password: {fieldValue: '', minLength: {value: 2, message: 'Zu kurz, mindestens mindestens zwei Ziffern. '}}\n  });\n\n  const register = () => {\n    const errorsExist = hasFormErrors()\n\n    if (errorsExist) {\n      setRegisterError('Es sind noch Fehler vorhanden. Bitte korrigieren und nochmal klicken.')\n      return\n    } else {\n      setRegisterError('')\n    }\n\n    const body = JSON.stringify({username: formFields.username.fieldValue, password: formFields.password.fieldValue, email: formFields.email.fieldValue});\n    const url = 'http://3.123.35.137/user/add';\n    fetch(url, {\n      headers: {'Content-Type': 'application/json'},\n      body: body,\n      method: 'POST'\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(backendAnswer => {\n      if (backendAnswer.success === true) {\n        setIsRegistered(true);\n        setRegisterError('')\n        userContext.dispatch({type: USERINPUT, username: formFields.username.fieldValue})\n      } else if (backendAnswer.error.duplicate === true) {\n        setRegisterError('User oder Email bereits im System vorhanden.')\n      } else {\n        setRegisterError('Registrierung nicht möglich.')\n      }\n    })\n    .catch(error => {\n      setRegisterError('Registrierung nicht möglich.')\n    })\n  }\n\n  const hasFormErrors = () => {\n    let errorsExist = false;\n    const updatedFormFields = {}\n    for (let [key, fieldObject] of Object.entries(formFields)) {\n      const fieldErrors = getFieldErrors(fieldObject)\n      updatedFormFields[key] = {...fieldObject, ...{fieldErrors}}\n      for (let [key, errorMessage] of Object.entries(fieldErrors)) {\n        if (errorMessage.length > 0) {\n          errorsExist = true;\n        }\n      }\n    }\n\n    setformFields({...formFields, ...updatedFormFields})\n    return errorsExist;\n  }\n\n  if (isRegistered) {\n    return (\n      <IonPage>\n        <IonContent className=\"ion-padding\">\n          <p className=\"ion-text-center\">Erfolgreich registriert!</p>\n        </IonContent>\n      </IonPage>\n    )\n  } else if (!userContext.userState || !userContext.userState.login || registerError) {\n      return (\n        <IonPage>\n          <IonContent className=\"ion-padding\">\n            <IonList>\n              <Input fieldName=\"username\" type=\"text\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n              <Input fieldName=\"email\" type=\"text\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n              <Input fieldName=\"password\" type=\"password\" clearOnEdit=\"false\" formFields={formFields} setformFields={setformFields} tabChanged={props.tabChanged}/>\n            </IonList>\n            <IonButton className=\"ion-margin-bottom\" onClick={register}>Register</IonButton>\n            <IonNote color=\"danger\"><p>{registerError}</p></IonNote>\n          </IonContent>\n        </IonPage>\n      )\n  } else {\n      return (\n        <IonPage>\n          <IonContent className=\"ion-padding\">\n            <IonText><p>Neu registrieren?</p></IonText>\n            <IonButton onClick={() => userContext.dispatch({type: LOGOUT})}>Ausloggen</IonButton>\n          </IonContent>\n        </IonPage>\n      )\n    }\n  }\n\nexport default Register"]},"metadata":{},"sourceType":"module"}