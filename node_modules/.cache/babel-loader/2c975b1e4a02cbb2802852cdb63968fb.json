{"ast":null,"code":"export const getFieldErrors = (field, userInput = null) => {\n  if (userInput) {\n    field.fieldValue = userInput;\n  }\n\n  const fieldErrors = {};\n\n  if (field.minLength) {\n    if (field.fieldValue.length < field.minLength.value) {\n      fieldErrors.minLength = field.minLength.message;\n    } else {\n      fieldErrors.minLength = '';\n    }\n  }\n\n  if (field.maxLength) {\n    if (field.fieldValue.length > field.maxLength.value) {\n      fieldErrors.maxLength = field.maxLength.message;\n    } else {\n      fieldErrors.maxLength = '';\n    }\n  }\n\n  if (field.pattern) {\n    const regex = RegExp(field.pattern.value);\n    const regexResult = regex.test(field.fieldValue);\n\n    if (regexResult === false) {\n      fieldErrors.pattern = field.pattern.message;\n    } else {\n      fieldErrors.pattern = '';\n    }\n  }\n\n  return fieldErrors;\n};","map":{"version":3,"sources":["/Users/maximilian/privat/React-frontend/src/functions/fieldvalidation.js"],"names":["getFieldErrors","field","userInput","fieldValue","fieldErrors","minLength","length","value","message","maxLength","pattern","regex","RegExp","regexResult","test"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,KAAD,EAAQC,SAAS,GAAG,IAApB,KAA6B;AACzD,MAAIA,SAAJ,EAAe;AACbD,IAAAA,KAAK,CAACE,UAAN,GAAmBD,SAAnB;AACD;;AACD,QAAME,WAAW,GAAG,EAApB;;AAEA,MAAIH,KAAK,CAACI,SAAV,EAAqB;AACnB,QAAIJ,KAAK,CAACE,UAAN,CAAiBG,MAAjB,GAA0BL,KAAK,CAACI,SAAN,CAAgBE,KAA9C,EAAqD;AACnDH,MAAAA,WAAW,CAACC,SAAZ,GAAwBJ,KAAK,CAACI,SAAN,CAAgBG,OAAxC;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACC,SAAZ,GAAwB,EAAxB;AACD;AACF;;AAED,MAAIJ,KAAK,CAACQ,SAAV,EAAqB;AACnB,QAAIR,KAAK,CAACE,UAAN,CAAiBG,MAAjB,GAA0BL,KAAK,CAACQ,SAAN,CAAgBF,KAA9C,EAAqD;AACnDH,MAAAA,WAAW,CAACK,SAAZ,GAAwBR,KAAK,CAACQ,SAAN,CAAgBD,OAAxC;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACK,SAAZ,GAAwB,EAAxB;AACD;AACF;;AAED,MAAIR,KAAK,CAACS,OAAV,EAAmB;AACjB,UAAMC,KAAK,GAAGC,MAAM,CAACX,KAAK,CAACS,OAAN,CAAcH,KAAf,CAApB;AACA,UAAMM,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWb,KAAK,CAACE,UAAjB,CAApB;;AACA,QAAIU,WAAW,KAAK,KAApB,EAA2B;AACzBT,MAAAA,WAAW,CAACM,OAAZ,GAAsBT,KAAK,CAACS,OAAN,CAAcF,OAApC;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACM,OAAZ,GAAsB,EAAtB;AACD;AACF;;AAEC,SAAON,WAAP;AACH,CAjCM","sourcesContent":["export const getFieldErrors = (field, userInput = null) => {\n  if (userInput) {\n    field.fieldValue = userInput;\n  }\n  const fieldErrors = {};\n  \n  if (field.minLength) {\n    if (field.fieldValue.length < field.minLength.value) {\n      fieldErrors.minLength = field.minLength.message\n    } else {\n      fieldErrors.minLength = ''\n    }\n  }\n\n  if (field.maxLength) {\n    if (field.fieldValue.length > field.maxLength.value) {\n      fieldErrors.maxLength = field.maxLength.message\n    } else {\n      fieldErrors.maxLength = ''\n    }\n  }\n\n  if (field.pattern) {\n    const regex = RegExp(field.pattern.value);\n    const regexResult = regex.test(field.fieldValue);\n    if (regexResult === false) {\n      fieldErrors.pattern = field.pattern.message\n    } else {\n      fieldErrors.pattern = ''\n    }\n  }\n\n    return fieldErrors\n}"]},"metadata":{},"sourceType":"module"}